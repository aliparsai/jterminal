/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 30 15:29:07 GMT 2017
 */

package com.grahamedgecombe.jterminal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.grahamedgecombe.jterminal.TerminalCell;
import java.awt.Color;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TerminalCell_ESTest extends TerminalCell_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Color color0 = new Color(5134, true);
      TerminalCell terminalCell0 = new TerminalCell('i', color0, color0);
      terminalCell0.getForegroundColor();
      assertEquals('i', terminalCell0.getCharacter());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Color color0 = Color.gray;
      TerminalCell terminalCell0 = new TerminalCell('4', color0, color0);
      terminalCell0.getForegroundColor();
      assertEquals('4', terminalCell0.getCharacter());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Color color0 = Color.gray;
      TerminalCell terminalCell0 = new TerminalCell('4', color0, color0);
      char char0 = terminalCell0.getCharacter();
      assertEquals('4', char0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Color color0 = Color.gray;
      TerminalCell terminalCell0 = new TerminalCell('c', color0, color0);
      char char0 = terminalCell0.getCharacter();
      assertEquals('c', char0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Color color0 = new Color(5134, true);
      TerminalCell terminalCell0 = new TerminalCell('i', color0, color0);
      terminalCell0.getBackgroundColor();
      assertEquals('i', terminalCell0.getCharacter());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Color color0 = Color.gray;
      TerminalCell terminalCell0 = new TerminalCell('4', color0, color0);
      terminalCell0.getBackgroundColor();
      assertEquals('4', terminalCell0.getCharacter());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Color color0 = Color.red;
      TerminalCell terminalCell0 = null;
      try {
        terminalCell0 = new TerminalCell('d', color0, (Color) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // foregroundColor
         //
         verifyException("com.grahamedgecombe.jterminal.TerminalCell", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TerminalCell terminalCell0 = null;
      try {
        terminalCell0 = new TerminalCell('t', (Color) null, (Color) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // backgroundColor
         //
         verifyException("com.grahamedgecombe.jterminal.TerminalCell", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Color color0 = new Color(0.0F, 0.0F, 0.0F, 0.0F);
      TerminalCell terminalCell0 = new TerminalCell('$', color0, color0);
      terminalCell0.getForegroundColor();
      assertEquals('$', terminalCell0.getCharacter());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Color color0 = new Color(0.0F, 0.0F, 0.0F, 0.0F);
      TerminalCell terminalCell0 = new TerminalCell('$', color0, color0);
      terminalCell0.getBackgroundColor();
      assertEquals('$', terminalCell0.getCharacter());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Color color0 = new Color(0.0F, 0.0F, 0.0F, 0.0F);
      TerminalCell terminalCell0 = new TerminalCell('$', color0, color0);
      char char0 = terminalCell0.getCharacter();
      assertEquals('$', char0);
  }
}
